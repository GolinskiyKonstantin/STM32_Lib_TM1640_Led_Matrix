/*	сохраняем данный файл в кодировке UTF-8		*/

	#include "TM1640.h"
	
/////////////////////////////////////////////////////////////////////
// подключение:
//	пин PB6 CLK 	режим просто OUTPUT
//	пин PB7 DIN		режим просто OUTPUT
//////////////////////////////////////////////////////////////////////

main()=============================================================================================================================

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	uint8_t flag = 0;							// флаг чтоб поочереди было сперва бегущая строка после анимация и покругу
	
	extern int32_t x;
	extern int32_t y;
	extern uint8_t *frameBuffer;
	
	extern uint8_t a[8];
	extern uint8_t b[8];
	
	frameBuffer = (uint8_t *)malloc( 16 );  			// создаем массив буффер для нашего экрана размер равен кол-ву столбцов ( унвс их 16 )
  
	TM1640_brightness(1);								// устанавливаем подсветка значение от 0 до 7
	TM1640_clearDisplay();
	// TM1640_display_byte(15,0xF0);					// прорисовываем ( если нужно ) в последней строке 1 байт ( 0xF0 = получаем 11110000 )


	// Создаем строку для отображения функция utf8rus() выделит динамическую память под
	// нужный размер и вернет на нее указатель
	// в начале и в конце не забываем ставить пробелы для красивого отображения текста
	char *myText = utf8rus( " Привет Мир 12345 Hello Jon QWERTY " );
	// незабываем каждый раз после вызова функции utf8rus() освобождать память
	free( pText );	// освобождаем память выделенную в функции utf8rus() посредством malloc();
					
	// ТОЛЬКО для отображения анимации------------------------------------------------------
	// x = ( 8*MATRIXS_QUANTITY );	// ставим для движения анимации с права на лево
	// x = 0; // для движения анимации с лево на право
	//---------------------------------------------------------------------------------------
		
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	

while(1)===========================================================================================================================

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	  
	
		// вывод бегущей строки
		if( !flag){
					  
			int len = strlen( myText );						// Узнаем длину нашего текста
			
			TM1640_drawString_buff( myText, len, x, 0 );	// выводим на экран наш текст				  
			TM1640_display_Draw();							// отображаем на дисплее то что нарисовали выше
			
			HAL_Delay(100);									// задержка ( регулирует скорость прокрутки )

			if( --x < len * -8 ) {
				x = (16);
				flag=1;
			}
		}					  
					
	//*************************************************************************	
		// вывод анимации
		else{					
					
			clear_buff();
			drawSprite( (uint8_t*)&a, x--, 0, 8, 8 ); 	// Х-- ставим для движения анимации с права на лево, Х++ для движения анимации с лево на право
			TM1640_display_Draw();						// отображаем на дисплее то что нарисовали выше
			
			HAL_Delay(200);

			clear_buff();
			drawSprite( (uint8_t*)&b, x--, 0, 8, 8 );	// Х-- ставим для движения анимации с права на лево, Х++ для движения анимации с лево на право
			TM1640_display_Draw();						// отображаем на дисплее то что нарисовали выше
			
			HAL_Delay(200);
					
			// внимание выводим столько кадров сколько есть в массиве ( в данном случае два кадра )
				
			//-- для движения анимации с лево на право -----------
			//	if( x > ( 16 ) ){
			//		x= -1;
			//	}
			//-----------------------------------------------------------

			//-----------------------------------------------------------	  
			//-- для движения анимации с права на лево -------------
				if( x <-6){
					x= ( 16 );
					flag=0;
				}
			//---------------------------------------------				
		}	

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		


=== end while(1) ==================================================================================================================
=== end main() ====================================================================================================================
